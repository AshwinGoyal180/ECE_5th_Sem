$date
  Sat Sep 19 22:17:33 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module adder_tb $end
$var reg 3 ! input[2:0] $end
$var reg 2 " output[1:0] $end
$scope module uut $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % c $end
$var reg 1 & s $end
$var reg 1 ' ca $end
$var reg 1 ( sum1 $end
$var reg 1 ) carry1 $end
$var reg 1 * carry2 $end
$scope module m1 $end
$var reg 1 + a $end
$var reg 1 , b $end
$var reg 1 - sum $end
$var reg 1 . carry $end
$upscope $end
$scope module m2 $end
$var reg 1 / a $end
$var reg 1 0 b $end
$var reg 1 1 sum $end
$var reg 1 2 carry $end
$upscope $end
$scope module m3 $end
$var reg 1 3 a $end
$var reg 1 4 b $end
$var reg 1 5 z $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b00 "
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
#10000000
b001 !
b01 "
1%
1&
1/
11
#20000000
b010 !
b01 "
1$
0%
1&
1(
1,
1-
0/
10
11
#30000000
b011 !
b10 "
1%
0&
1'
1*
1/
01
12
14
15
#40000000
b100 !
b01 "
1#
0$
0%
1&
0'
0*
1+
0,
0/
11
02
04
05
#50000000
b101 !
b10 "
1%
0&
1'
1*
1/
01
12
14
15
#60000000
b110 !
b10 "
1$
0%
0&
0(
1)
0*
1,
0-
1.
0/
00
01
02
13
04
#70000000
b111 !
b11 "
1%
1&
1/
11
#80000000
